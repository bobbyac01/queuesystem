{"ast":null,"code":"var _jsxFileName = \"E:\\\\AITest\\\\queue-system\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [badmintonData, setBadmintonData] = useState({\n    queue: {\n      queue: [],\n      length: 0,\n      canCreateMatch: false\n    },\n    activeMatches: [],\n    players: []\n  });\n  const [playerName, setPlayerName] = useState('');\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [selectedMatch, setSelectedMatch] = useState(null);\n  const [selectedWinners, setSelectedWinners] = useState([]);\n  useEffect(() => {\n    // Request initial data when component mounts\n    const fetchInitialData = async () => {\n      try {\n        const response = await axios.get('/api/badminton/status');\n        setBadmintonData(response.data);\n      } catch (error) {\n        console.error('Error fetching initial data:', error);\n      }\n    };\n    fetchInitialData();\n    socket.on('badmintonInitialData', data => {\n      console.log('Received initial data:', data);\n      setBadmintonData(data);\n    });\n    socket.on('badmintonUpdate', data => {\n      setBadmintonData(prev => ({\n        ...prev,\n        queue: data.queue,\n        activeMatches: data.activeMatches\n      }));\n    });\n    socket.on('matchCreated', ({\n      match\n    }) => {\n      showNotification(`New match created! Players: ${match.players.map(p => p.name).join(', ')}`);\n      if (currentPlayer && match.players.some(p => p.id === currentPlayer.id)) {\n        showNotification('You have been selected for a match!', 'success');\n      }\n    });\n    socket.on('matchCompleted', ({\n      match\n    }) => {\n      showNotification(`Match completed! Winners: ${match.result.winners.map(p => p.name).join(', ')}`);\n      setSelectedMatch(null);\n      setSelectedWinners([]);\n    });\n    return () => {\n      socket.off('badmintonInitialData');\n      socket.off('badmintonUpdate');\n      socket.off('matchCreated');\n      socket.off('matchCompleted');\n    };\n  }, [currentPlayer]);\n  const showNotification = (message, type = 'success') => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification(null), 5000);\n  };\n  const joinQueue = async () => {\n    if (!playerName.trim()) {\n      showNotification('Please enter your name', 'error');\n      return;\n    }\n    try {\n      const response = await axios.post('/api/badminton/join', {\n        playerName: playerName.trim()\n      });\n      if (response.data.success) {\n        setCurrentPlayer(response.data.player);\n        showNotification(`Successfully joined the badminton queue! Position: #${response.data.queuePosition}`);\n        setPlayerName('');\n      } else {\n        showNotification(response.data.message, 'error');\n      }\n    } catch (error) {\n      showNotification('Failed to join queue. Please try again.', 'error');\n      console.error('Error joining queue:', error);\n    }\n  };\n  const leaveQueue = async () => {\n    if (!currentPlayer) return;\n    try {\n      const response = await axios.delete(`/api/badminton/leave/${currentPlayer.id}`);\n      if (response.data.success) {\n        setCurrentPlayer(null);\n        showNotification('Successfully left the queue');\n      } else {\n        showNotification(response.data.message, 'error');\n      }\n    } catch (error) {\n      showNotification('Failed to leave queue. Please try again.', 'error');\n      console.error('Error leaving queue:', error);\n    }\n  };\n  const createMatch = async () => {\n    try {\n      const response = await axios.post('/api/badminton/create-match');\n      if (response.data.success) {\n        showNotification('Match created successfully!');\n      } else {\n        showNotification(response.data.message, 'error');\n      }\n    } catch (error) {\n      showNotification('Failed to create match. Please try again.', 'error');\n      console.error('Error creating match:', error);\n    }\n  };\n  const completeMatch = async matchId => {\n    if (selectedWinners.length !== 2) {\n      showNotification('Please select exactly 2 winners', 'error');\n      return;\n    }\n    try {\n      const response = await axios.post('/api/badminton/complete-match', {\n        matchId: matchId,\n        winnerIds: selectedWinners\n      });\n      if (response.data.success) {\n        showNotification('Match completed successfully!');\n        setSelectedMatch(null);\n        setSelectedWinners([]);\n      } else {\n        showNotification(response.data.message, 'error');\n      }\n    } catch (error) {\n      showNotification('Failed to complete match. Please try again.', 'error');\n      console.error('Error completing match:', error);\n    }\n  };\n  const rejoinQueue = async playerId => {\n    try {\n      const response = await axios.post(`/api/badminton/rejoin/${playerId}`);\n      if (response.data.success) {\n        showNotification('Successfully rejoined the queue!');\n      } else {\n        showNotification(response.data.message, 'error');\n      }\n    } catch (error) {\n      showNotification('Failed to rejoin queue. Please try again.', 'error');\n      console.error('Error rejoining queue:', error);\n    }\n  };\n  const formatTime = timeString => {\n    const date = new Date(timeString);\n    return date.toLocaleTimeString();\n  };\n  const toggleWinnerSelection = playerId => {\n    if (selectedWinners.includes(playerId)) {\n      setSelectedWinners(selectedWinners.filter(id => id !== playerId));\n    } else if (selectedWinners.length < 2) {\n      setSelectedWinners([...selectedWinners, playerId]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type === 'error' ? 'error' : ''}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"queue-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFF8 Badminton Queue System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && joinQueue(),\n          disabled: !!currentPlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: joinQueue,\n          disabled: !!currentPlayer || !playerName.trim(),\n          children: currentPlayer ? 'In Queue' : 'Join Queue'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), currentPlayer && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          padding: '10px',\n          background: '#e3f2fd',\n          borderRadius: '4px'\n        },\n        children: [\"You are queued as \", currentPlayer.name, \" (Ranking: \", currentPlayer.ranking, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leaveQueue,\n          style: {\n            marginLeft: '10px',\n            padding: '5px 10px',\n            background: '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Leave Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"queue-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Badminton Queue (\", badmintonData.queue.length, \" players)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"queue-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: badmintonData.queue.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Players in Queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: Math.floor(badmintonData.queue.length / 4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Possible Matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: badmintonData.activeMatches.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Active Matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), badmintonData.queue.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px',\n          color: '#666'\n        },\n        children: \"Queue is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"queue-list\",\n        children: badmintonData.queue.queue.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `queue-item ${currentPlayer && currentPlayer.id === item.player.id ? 'current-user' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"position\",\n              children: [\"#\", item.position]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-name\",\n              children: item.player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ranking\",\n              children: [\"Rank: \", item.player.ranking]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"weight\",\n              children: [\"Weight: \", item.player.weight]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"join-time\",\n              children: [\"Joined: \", formatTime(item.joinTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this)\n        }, item.player.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Match Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-btn\",\n        onClick: createMatch,\n        disabled: !badmintonData.queue.canCreateMatch,\n        children: \"Create Match (Need 4 Players)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), badmintonData.activeMatches.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-matches\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), badmintonData.activeMatches.map(match => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Match \", match.id.slice(0, 8)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"match-time\",\n            children: [\"Started: \", formatTime(match.startTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-players\",\n          children: match.players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `player-card ${selectedMatch === match.id && selectedWinners.includes(player.id) ? 'winner-selected' : ''}`,\n            onClick: () => {\n              if (selectedMatch === match.id) {\n                toggleWinnerSelection(player.id);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-name\",\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-ranking\",\n              children: [\"(\", player.ranking, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-controls\",\n          children: selectedMatch === match.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select 2 winners by clicking on players above\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => completeMatch(match.id),\n              disabled: selectedWinners.length !== 2,\n              className: \"complete-btn\",\n              children: \"Complete Match\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setSelectedMatch(null);\n                setSelectedWinners([]);\n              },\n              className: \"cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedMatch(match.id),\n            className: \"select-winners-btn\",\n            children: \"Record Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this)]\n      }, match.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), badmintonData.players.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-leaderboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Player Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard\",\n        children: badmintonData.players.sort((a, b) => b.ranking - a.ranking).slice(0, 10).map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leaderboard-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rank\",\n            children: [\"#\", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rating\",\n            children: player.ranking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"record\",\n            children: [player.wins, \"W-\", player.losses, \"L\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status\",\n            children: player.isInMatch ? '🏸 Playing' : player.isInQueue ? '⏳ Queued' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this), !player.isInQueue && !player.isInMatch && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => rejoinQueue(player.id),\n            className: \"rejoin-btn\",\n            children: \"Rejoin Queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 21\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mDG8S4/FaKTr52SFN2xXvpxNPaI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","axios","jsxDEV","_jsxDEV","socket","App","_s","badmintonData","setBadmintonData","queue","length","canCreateMatch","activeMatches","players","playerName","setPlayerName","currentPlayer","setCurrentPlayer","notification","setNotification","selectedMatch","setSelectedMatch","selectedWinners","setSelectedWinners","fetchInitialData","response","get","data","error","console","on","log","prev","match","showNotification","map","p","name","join","some","id","result","winners","off","message","type","setTimeout","joinQueue","trim","post","success","player","queuePosition","leaveQueue","delete","createMatch","completeMatch","matchId","winnerIds","rejoinQueue","playerId","formatTime","timeString","date","Date","toLocaleTimeString","toggleWinnerSelection","includes","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onKeyPress","key","disabled","onClick","style","marginTop","padding","background","borderRadius","ranking","marginLeft","color","border","cursor","Math","floor","textAlign","item","position","weight","joinTime","slice","startTime","sort","a","b","index","wins","losses","isInMatch","isInQueue","_c","$RefreshReg$"],"sources":["E:/AITest/queue-system/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\n\nconst socket = io('http://localhost:5000');\n\nfunction App() {\n  const [badmintonData, setBadmintonData] = useState({\n    queue: { queue: [], length: 0, canCreateMatch: false },\n    activeMatches: [],\n    players: []\n  });\n  const [playerName, setPlayerName] = useState('');\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [selectedMatch, setSelectedMatch] = useState(null);\n  const [selectedWinners, setSelectedWinners] = useState([]);\n\n  useEffect(() => {\n    // Request initial data when component mounts\n    const fetchInitialData = async () => {\n      try {\n        const response = await axios.get('/api/badminton/status');\n        setBadmintonData(response.data);\n      } catch (error) {\n        console.error('Error fetching initial data:', error);\n      }\n    };\n\n    fetchInitialData();\n\n    socket.on('badmintonInitialData', (data) => {\n      console.log('Received initial data:', data);\n      setBadmintonData(data);\n    });\n\n    socket.on('badmintonUpdate', (data) => {\n      setBadmintonData(prev => ({\n        ...prev,\n        queue: data.queue,\n        activeMatches: data.activeMatches\n      }));\n    });\n\n    socket.on('matchCreated', ({ match }) => {\n      showNotification(`New match created! Players: ${match.players.map(p => p.name).join(', ')}`);\n      if (currentPlayer && match.players.some(p => p.id === currentPlayer.id)) {\n        showNotification('You have been selected for a match!', 'success');\n      }\n    });\n\n    socket.on('matchCompleted', ({ match }) => {\n      showNotification(`Match completed! Winners: ${match.result.winners.map(p => p.name).join(', ')}`);\n      setSelectedMatch(null);\n      setSelectedWinners([]);\n    });\n\n    return () => {\n      socket.off('badmintonInitialData');\n      socket.off('badmintonUpdate');\n      socket.off('matchCreated');\n      socket.off('matchCompleted');\n    };\n  }, [currentPlayer]);\n\n  const showNotification = (message, type = 'success') => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 5000);\n  };\n\n  const joinQueue = async () => {\n    if (!playerName.trim()) {\n      showNotification('Please enter your name', 'error');\n      return;\n    }\n\n    try {\n      const response = await axios.post('/api/badminton/join', {\n        playerName: playerName.trim()\n      });\n\n      if (response.data.success) {\n        setCurrentPlayer(response.data.player);\n        showNotification(`Successfully joined the badminton queue! Position: #${response.data.queuePosition}`);\n        setPlayerName('');\n      } else {\n        showNotification(response.data.message, 'error');\n      }\n    } catch (error) {\n      showNotification('Failed to join queue. Please try again.', 'error');\n      console.error('Error joining queue:', error);\n    }\n  };\n\n  const leaveQueue = async () => {\n    if (!currentPlayer) return;\n\n    try {\n      const response = await axios.delete(`/api/badminton/leave/${currentPlayer.id}`);\n      \n      if (response.data.success) {\n        setCurrentPlayer(null);\n        showNotification('Successfully left the queue');\n      } else {\n        showNotification(response.data.message, 'error');\n      }\n    } catch (error) {\n      showNotification('Failed to leave queue. Please try again.', 'error');\n      console.error('Error leaving queue:', error);\n    }\n  };\n\n  const createMatch = async () => {\n    try {\n      const response = await axios.post('/api/badminton/create-match');\n      \n      if (response.data.success) {\n        showNotification('Match created successfully!');\n      } else {\n        showNotification(response.data.message, 'error');\n      }\n    } catch (error) {\n      showNotification('Failed to create match. Please try again.', 'error');\n      console.error('Error creating match:', error);\n    }\n  };\n\n  const completeMatch = async (matchId) => {\n    if (selectedWinners.length !== 2) {\n      showNotification('Please select exactly 2 winners', 'error');\n      return;\n    }\n\n    try {\n      const response = await axios.post('/api/badminton/complete-match', {\n        matchId: matchId,\n        winnerIds: selectedWinners\n      });\n      \n      if (response.data.success) {\n        showNotification('Match completed successfully!');\n        setSelectedMatch(null);\n        setSelectedWinners([]);\n      } else {\n        showNotification(response.data.message, 'error');\n      }\n    } catch (error) {\n      showNotification('Failed to complete match. Please try again.', 'error');\n      console.error('Error completing match:', error);\n    }\n  };\n\n  const rejoinQueue = async (playerId) => {\n    try {\n      const response = await axios.post(`/api/badminton/rejoin/${playerId}`);\n      \n      if (response.data.success) {\n        showNotification('Successfully rejoined the queue!');\n      } else {\n        showNotification(response.data.message, 'error');\n      }\n    } catch (error) {\n      showNotification('Failed to rejoin queue. Please try again.', 'error');\n      console.error('Error rejoining queue:', error);\n    }\n  };\n\n  const formatTime = (timeString) => {\n    const date = new Date(timeString);\n    return date.toLocaleTimeString();\n  };\n\n  const toggleWinnerSelection = (playerId) => {\n    if (selectedWinners.includes(playerId)) {\n      setSelectedWinners(selectedWinners.filter(id => id !== playerId));\n    } else if (selectedWinners.length < 2) {\n      setSelectedWinners([...selectedWinners, playerId]);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {notification && (\n        <div className={`notification ${notification.type === 'error' ? 'error' : ''}`}>\n          {notification.message}\n        </div>\n      )}\n\n      <div className=\"queue-header\">\n        <h1>🏸 Badminton Queue System</h1>\n        <div className=\"join-form\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            value={playerName}\n            onChange={(e) => setPlayerName(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && joinQueue()}\n            disabled={!!currentPlayer}\n          />\n          <button \n            onClick={joinQueue}\n            disabled={!!currentPlayer || !playerName.trim()}\n          >\n            {currentPlayer ? 'In Queue' : 'Join Queue'}\n          </button>\n        </div>\n        {currentPlayer && (\n          <div style={{ marginTop: '10px', padding: '10px', background: '#e3f2fd', borderRadius: '4px' }}>\n            You are queued as {currentPlayer.name} (Ranking: {currentPlayer.ranking})\n            <button \n              onClick={leaveQueue}\n              style={{ marginLeft: '10px', padding: '5px 10px', background: '#dc3545', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}\n            >\n              Leave Queue\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"queue-display\">\n        <h2>Badminton Queue ({badmintonData.queue.length} players)</h2>\n        \n        <div className=\"queue-stats\">\n          <div className=\"stat\">\n            <div className=\"stat-value\">{badmintonData.queue.length}</div>\n            <div className=\"stat-label\">Players in Queue</div>\n          </div>\n          <div className=\"stat\">\n            <div className=\"stat-value\">{Math.floor(badmintonData.queue.length / 4)}</div>\n            <div className=\"stat-label\">Possible Matches</div>\n          </div>\n          <div className=\"stat\">\n            <div className=\"stat-value\">{badmintonData.activeMatches.length}</div>\n            <div className=\"stat-label\">Active Matches</div>\n          </div>\n        </div>\n\n        {badmintonData.queue.length === 0 ? (\n          <div style={{ textAlign: 'center', padding: '40px', color: '#666' }}>\n            Queue is empty\n          </div>\n        ) : (\n          <ul className=\"queue-list\">\n            {badmintonData.queue.queue.map((item) => (\n              <li \n                key={item.player.id} \n                className={`queue-item ${currentPlayer && currentPlayer.id === item.player.id ? 'current-user' : ''}`}\n              >\n                <div className=\"user-info\">\n                  <span className=\"position\">#{item.position}</span>\n                  <span className=\"user-name\">{item.player.name}</span>\n                  <span className=\"ranking\">Rank: {item.player.ranking}</span>\n                  <span className=\"weight\">Weight: {item.player.weight}</span>\n                  <span className=\"join-time\">Joined: {formatTime(item.joinTime)}</span>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <div className=\"admin-controls\">\n        <h3>Match Management</h3>\n        <button \n          className=\"next-btn\"\n          onClick={createMatch}\n          disabled={!badmintonData.queue.canCreateMatch}\n        >\n          Create Match (Need 4 Players)\n        </button>\n      </div>\n\n      {badmintonData.activeMatches.length > 0 && (\n        <div className=\"active-matches\">\n          <h3>Active Matches</h3>\n          {badmintonData.activeMatches.map((match) => (\n            <div key={match.id} className=\"match-card\">\n              <div className=\"match-header\">\n                <h4>Match {match.id.slice(0, 8)}</h4>\n                <span className=\"match-time\">Started: {formatTime(match.startTime)}</span>\n              </div>\n              <div className=\"match-players\">\n                {match.players.map((player) => (\n                  <div \n                    key={player.id} \n                    className={`player-card ${selectedMatch === match.id && selectedWinners.includes(player.id) ? 'winner-selected' : ''}`}\n                    onClick={() => {\n                      if (selectedMatch === match.id) {\n                        toggleWinnerSelection(player.id);\n                      }\n                    }}\n                  >\n                    <span className=\"player-name\">{player.name}</span>\n                    <span className=\"player-ranking\">({player.ranking})</span>\n                  </div>\n                ))}\n              </div>\n              <div className=\"match-controls\">\n                {selectedMatch === match.id ? (\n                  <div>\n                    <p>Select 2 winners by clicking on players above</p>\n                    <button \n                      onClick={() => completeMatch(match.id)}\n                      disabled={selectedWinners.length !== 2}\n                      className=\"complete-btn\"\n                    >\n                      Complete Match\n                    </button>\n                    <button \n                      onClick={() => {\n                        setSelectedMatch(null);\n                        setSelectedWinners([]);\n                      }}\n                      className=\"cancel-btn\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                ) : (\n                  <button \n                    onClick={() => setSelectedMatch(match.id)}\n                    className=\"select-winners-btn\"\n                  >\n                    Record Result\n                  </button>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {badmintonData.players.length > 0 && (\n        <div className=\"players-leaderboard\">\n          <h3>Player Rankings</h3>\n          <div className=\"leaderboard\">\n            {badmintonData.players\n              .sort((a, b) => b.ranking - a.ranking)\n              .slice(0, 10)\n              .map((player, index) => (\n                <div key={player.id} className=\"leaderboard-item\">\n                  <span className=\"rank\">#{index + 1}</span>\n                  <span className=\"name\">{player.name}</span>\n                  <span className=\"rating\">{player.ranking}</span>\n                  <span className=\"record\">{player.wins}W-{player.losses}L</span>\n                  <span className=\"status\">\n                    {player.isInMatch ? '🏸 Playing' : player.isInQueue ? '⏳ Queued' : ''}\n                  </span>\n                  {!player.isInQueue && !player.isInMatch && (\n                    <button \n                      onClick={() => rejoinQueue(player.id)}\n                      className=\"rejoin-btn\"\n                    >\n                      Rejoin Queue\n                    </button>\n                  )}\n                </div>\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}